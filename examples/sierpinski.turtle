#
# Sierpinski's Triangle
#
# L-System:
#  start: A
#  rules:
#     A -> B-A-B
#     B -> A+B+A
#  semantics:
#     A and B mean move forward
#     + and - mean turn left/right by 60 degrees
#

max_depth = 5
pi = 3.1415926
dist = pi/2

int B(int depth);

int A(int depth) {  # rule A -> B-A-B
  if (depth > 0)
    let (d = depth-1) {
      B(d); rotate(-60);
      A(d); rotate(-60);
      B(d)
    }
  else move(dist)
}

int B(int depth) { # B -> A+B+A
  if (depth > 0)
    let (d = depth-1) {
      A(d); rotate(60);
      B(d); rotate(60);
      A(d)
    } 
  else move(dist)
}

int tmain() {A(max_depth)}  # start symbol A
       
      